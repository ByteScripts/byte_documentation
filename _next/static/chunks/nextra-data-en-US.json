{"/banking":{"title":"Banking","data":{"":"A banking system with metadatas, support for multiple accounts and more","installation#Installation":"","install-all-resource-dependencies#Install all resource dependencies":"oxmysql\nox_lib\nox_inventory\nes_extended","download-a-release#Download a release":"","install-optional-dependencies#Install optional dependencies":"These resources aren't required but provide additional functionality.\nox_target","resource-start-order#Resource start order":"It's important for your resources to start in a logical order to prevent errors from missing dependencies.\nstart oxmysql   # this should be one of the first resources\nstart ox_lib\nstart es_extended\nstart ox_target\nstart banking","esx#ESX":"You will need a compatible version of ESX Legacy (1.6.0 or higher)."}},"/banking/Functions/Server":{"title":"Server","data":{"":"The cardObject is a table with the following structure:\nlocal cardObject = {\n    identifier = \"string\",\n    iban = \"string\",\n    balance = \"number\",\n    transactions = \"table\",\n    pin = \"number\",\n    number = \"number\",\n    expires = \"table\",\n    cvv = \"number\",\n    name = \"string\",\n    main = \"boolean\"\n}","openbankaccount#openBankAccount":"Opens an bank account for the player.\nexports.banking:openBankAccount(player, forceCreate)\nplayer: xPlayer\nforceCreate?: boolean\nIf true, it will create a new bank account even if the player already has one.\nDefault: false","setpin#setPin":"Sets the pin for the player's bank account.\nexports.banking:setPin(item, newPin)\nitem: cardObject\nnewPin: string","setmaincard#setMainCard":"Sets the main card for the player's bank account.\nexports.banking:setMainCard(player, item)\nplayer: xPlayer\nitem: cardObject","getmaincard#getMainCard":"Gets the main card for the player's bank account.\nexports.banking:getMainCard(data)\ndata: xPlayer or playerSrc or identifier","setmoney#setMoney":"Sets the money for the player's bank account.\nexports.banking:setMoney(iban, amount)\niban: string\namount: number","withdraw#withdraw":"Withdraws money from the player's bank account.\nexports.banking:withdraw(player, item, amount)\nplayer: xPlayer\nitem: cardObject\namount: number","deposit#deposit":"Deposits money into the player's bank account.\nexports.banking:deposit(player, item, amount)\nplayer: xPlayer\nitem: cardObject\namount: number","addtransaction#addTransaction":"Adds a transaction to the player's bank account.\nexports.banking:addTransaction(player, item, amount, transactionType)\nplayer: xPlayer\nitem: cardObject\namount: number\ntransactionType: string","closeaccount#closeAccount":"Closes the player's bank account.\nexports.banking:closeAccount(player, item)\nplayer: xPlayer\nitem: cardObject","transfer#transfer":"Transfers money from one player's bank account to another.\nexports.banking:transfer(player, item, iban, amount)\nplayer: xPlayer\nitem: cardObject\niban: string\namount: number","resendcard#resendCard":"Resends the player's bank card.\nexports.banking:resendCard(player, iban, identifier)\nplayer: xPlayer\niban: string\nidentifier: string"}},"/banking/Guides/ox_target":{"title":"Use Ox Target","data":{"":"Enabling this feature will make all scripts from us use ox_target\nTo use ox target with the banking script all you have to do is add the following to your server.cfg\nsetr byte:ox_target 1"}},"/banking/Guides/text_ui":{"title":"Use Text UI","data":{"":"Enabling this feature will make all scripts from us use text ui and will DISABLE ox_target if you have enabled it\nTo use text ui with the banking script all you have to do is add the following to your server.cfg\nsetr byte:ox_textui 1"}},"/banking/issues":{"title":"Common Issues","data":{"nothing-to-see#Nothing to see":"If you have an issue, please join our discord"}},"/guides":{"title":"Guides","data":{"":"General guides for working with Overextended resources.\nGit\nNodeJS\nPNPM\nOx Types\nVisual Studio Code"}},"/guides/git":{"title":"Git","data":{"":"Git is a version control system, allowing changes to be effectively tracked, merged, and reverted.As our resources are hosted on GitHub, it can be incredibly useful to learn how to create your own repository to track changes and keep up-to-date. If you plan on making your own changes to our resources, this will allow you to keep your own changes and prevent loss of data.\nRefer to GitHub's guide to setting up Git.\nYou can use a Git GUI client like GitKraken to improve your workflow and more easily maintain changes."}},"/guides/types":{"title":"Types","data":{"setup-git-vscode-and-vscode-extensions#Setup git, vscode, and vscode extensions":"","download-our-lua-type-definitions#Download our Lua type definitions":"git clone https://github.com/overextended/ox_types.git`","update-your-settings#Update your settings":"You can modify the user, workspace, or folder settings for vscode.\nCreate an entry in Lua.workspace.library pointing to the cloned directory, or specific subdirectories.\n\"Lua.workspace.library\": [\n    \"F:/GitHub/ox_types/types\",\n    \"F:/GitHub/ox_lib\"\n],"}},"/guides/pnpm":{"title":"pnpm","data":{"":"pnpm is a fast and disk space efficient package manager, serving as an alternative to npm and yarn.\nEnsure you have installed Node.js.\nOpen a command-line terminal (e.g. Terminal, Command Prompt).\nEnter npm install -g pnpm to globally install the package.\nYou can install dependencies with pnpm using pnpm i.\nYou can reference package.json files for available scripts, i.e.\n\"scripts\": {\n  \"start\": \"vite\",\n  \"watch\": \"vite build --watch\",\n  \"build\": \"tsc && vite build\",\n  \"preview\": \"vite preview\",\n  \"format\": \"prettier --write \\\"./src/**/*.{ts,tsx,css}\\\"\"\n},\nUsing the example above pnpm build will run the build script for the given package."}},"/":{"title":"Introduction","data":{"":"Here is the documentation for the resources created by ByteScripts"}},"/guides/nodejs":{"title":"Node.js","data":{"":"Node.js is a JavaScript runtime and is used for building applications. In the context of FiveM it is necessary to bundle resources into a single package that can be ran on both the server and client.\nDownload and install the LTS version of Node.js.\nOpen a command-line terminal (e.g. Terminal, Command Prompt).\nEnter node --version to confirm successful installation."}},"/guides/vscode":{"title":"VS Code","data":{"":"Visual Studio Code is our recommended editor when working with Lua.","recommended-extensions#Recommended extensions":"Extensions let you add languages, debuggers, and other tools to VS Code - improving your developer experience.","sumnekolua#sumneko.lua":"Lua Language Server provides numerous language features to make development easier and faster, e.g.\nAnnotations\nAutocompletion\nCode formatting\nDiagnostics/warnings\nDynamic type checking\nSyntax checking","overextendedcfxlua-vscode#overextended.cfxlua-vscode":"Works alongside Lua Language Server to provide function and type declarations from Cfx's Lua runtime, Lua dialect, environment globals, and game natives."}}}